@using Shared_Static_Class.Model_DTO
@using Shared_Static_Class.Converters

@using Blazorise
@using Radzen.Blazor
@using Radzen

<li class="list-group-item">
    <Check @bind-Checked="item.SVA">Serviços de valor atrelado</Check>
    <br />
    @if (item.SVA.Value)
    {
        <RadzenFieldset Collapsed="false" AllowCollapse="true" Style="overflow-x: auto !important; max-height: 450px;">
            <HeaderTemplate>
                <span style="margin:auto">
                    <RadzenIcon Icon="sticky_note_2" class="me-1" />
                    <label><b>Serviços atrelados</b></label>
                </span>
                @if (item.Servicos_Atrelados.Any())
                {
                    <label style="margin-left:4px;"> Qtd: @item.Servicos_Atrelados.Count()</label>
                }
            </HeaderTemplate>
            <ChildContent>
                @if (item.Servicos_Atrelados.Any())
                {
                    @foreach (var (itemSva, index) in item.Servicos_Atrelados.Select((value, i) => (value, i + 1)))
                    {
                        <RadzenFieldset Style="max-width: 800px; margin: 40px auto;" Collapsed="false" AllowCollapse="true">
                            <HeaderTemplate>
                                <span class="d-inline-flex">
                                    <RadzenIcon Icon="inventory_2" class="me-1" />
                                    <b>
                                        Serviço N° @index
                                    </b>
                                </span>
                            </HeaderTemplate>
                            <ChildContent>

                                <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is3" Width="Width.Is100">
                                    <div class="form-group">
                                        <label><b>Serviço</b></label>
                                        <Blazorise.Validation>
                                            <Blazorise.Select TValue="SVA" @bind-SelectedValue="itemSva.Nome" Width="Blazorise.Width.Is100">
                                                <ChildContent>
                                                    <Blazorise.SelectItem Value="@(string.Empty)">Selecione</Blazorise.SelectItem>
                                                    @foreach (var item in Enum.GetValues(typeof(SVA)).Cast<SVA>().ToList())
                                                    {
                                                        <SelectItem Value="item">@item.GetDisplayName()</SelectItem>
                                                    }
                                                </ChildContent>
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </Blazorise.Select>
                                        </Blazorise.Validation>
                                    </div>
                                    <div class="form-group">
                                        <label><b>Valor</b></label>
                                        <Blazorise.Validation>
                                            <NumericPicker TValue="decimal" CurrencySymbol="R$" @bind-Value="itemSva.Valor">
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </NumericPicker>
                                        </Blazorise.Validation>
                                    </div>
                                </Div>
                            </ChildContent>
                        </RadzenFieldset>
                    }
                }
                <div class="rz-p-12 rz-text-align-center">
                    <Blazorise.Button Color="Blazorise.Color.Success" @onclick="@(() => item.Servicos_Atrelados.Add(new()))">
                        <Blazorise.Icon Name="Blazorise.IconName.Check">
                        </Blazorise.Icon>
                        Adicionar Serviço
                    </Blazorise.Button>
                    @if (item.Servicos_Atrelados.Count > 1)
                    {
                        <Blazorise.Button Color="Blazorise.Color.Danger" @onclick="@(() => item.Servicos_Atrelados.RemoveAt(item.Servicos_Atrelados.Count - 1))">
                            <Blazorise.Icon Name="Blazorise.IconName.Times">
                            </Blazorise.Icon>
                            Remover Serviço
                        </Blazorise.Button>
                    }
                </div>
            </ChildContent>
        </RadzenFieldset>
    }
</li>
@code {
    [Parameter]
    public required BoletaDadosModel item { get; set; } = new();
}
