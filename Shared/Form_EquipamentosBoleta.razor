@using Shared_Static_Class.Model_DTO
@using Blazorise
@using Radzen.Blazor
@using Radzen

<li class="list-group-item">
    <Check @bind-Checked="item.HasEquipamento">Equipamento</Check>
    <br />
    @if (item.HasEquipamento.Value)
    {
        <RadzenFieldset Collapsed="false" AllowCollapse="true" Style="overflow-x: auto !important; max-height: 450px;">
            <HeaderTemplate>
                <span class="d-inline-flex">
                    <RadzenIcon Icon="sticky_note_2" class="me-1" />
                    <label><b>Equipamentos</b></label>
                    @if (item.boletaEquipamentos.Any())
                    {
                        <label style="margin-left:4px;"> Qtd: @item.boletaEquipamentos.Count()</label>
                    }
                </span>
            </HeaderTemplate>
            <ChildContent>
                @if (item.boletaEquipamentos.Any())
                {
                    @foreach (var (itemEquip, index) in item.boletaEquipamentos.Select((value, i) => (value, i + 1)))
                    {
                        <RadzenFieldset Style="max-width: 800px; margin: 40px auto;" Collapsed="false" AllowCollapse="true">
                            <HeaderTemplate>
                                <span class="d-inline-flex">
                                    <RadzenIcon Icon="inventory_2" class="me-1" />
                                    <b>
                                        Equipamento N° @index
                                    </b>
                                </span>
                            </HeaderTemplate>
                            <ChildContent>
                                <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is3" Width="Width.Is100">
                                    <div class="form-group">
                                        <label><b>Modelo</b></label>
                                        <Blazorise.Validation>
                                            <TextEdit @bind-Text="@itemEquip.Modelo" Class="form-control">
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Blazorise.Validation>
                                    </div>
                                    <div class="form-group">
                                        <label><b>Material</b></label>
                                        <Blazorise.Validation>
                                            <TextEdit @bind-Text="@itemEquip.Material" Class="form-control" Disabled>
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Blazorise.Validation>
                                    </div>

                                </Div>
                                <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is3" Width="Width.Is100">
                                    <div class="form-group">
                                        <label><b>IMEI</b></label>
                                        <Blazorise.Validation>
                                            <TextEdit @bind-Text="@itemEquip.IMEI" Class="form-control" Disabled>
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </TextEdit>
                                        </Blazorise.Validation>
                                    </div>
                                    <div class="form-group">
                                        <label><b>Valor</b></label>
                                        <Blazorise.Validation>
                                            <NumericPicker TValue="decimal" CurrencySymbol="R$" @bind-Value="itemEquip.Valor" Disabled>
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </NumericPicker>
                                        </Blazorise.Validation>
                                    </div>
                                </Div>
                                <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is3" Width="Width.Is100">
                                    <div class="form-group">
                                        <label><b>Faturamento</b></label>
                                        <Blazorise.Validation>
                                            <Blazorise.TextEdit @bind-Text="itemEquip.Faturamento" Class="form-control" Disabled>
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </Blazorise.TextEdit>
                                        </Blazorise.Validation>
                                    </div>
                                    <div class="form-group">
                                        <label><b>Nota Fiscal</b></label>
                                        <Blazorise.Validation>
                                            <Blazorise.TextEdit @bind-Text="itemEquip.NF" Class="form-control" Disabled>
                                                <Feedback>
                                                    <Blazorise.ValidationError />
                                                </Feedback>
                                            </Blazorise.TextEdit>
                                        </Blazorise.Validation>
                                    </div>
                                </Div>
                            </ChildContent>
                        </RadzenFieldset>
                    }
                }
                <div class="rz-p-12 rz-text-align-center">
                    <Blazorise.Button Color="Blazorise.Color.Success" @onclick="@(() => item.boletaEquipamentos.Add(new()))">
                        Adicionar Equipamento
                    </Blazorise.Button>
                    @if (item.boletaEquipamentos.Count > 1)
                    {
                        <Blazorise.Button Color="Blazorise.Color.Danger" @onclick="@(() => item.boletaEquipamentos.RemoveAt(item.boletaEquipamentos.Count - 1))">
                            <Blazorise.Icon Name="Blazorise.IconName.Times">
                            </Blazorise.Icon>
                            Remover Equipamento
                        </Blazorise.Button>
                    }
                </div>
            </ChildContent>
        </RadzenFieldset>
    }
</li>

@code {
    [Parameter]
    public required BoletaDadosModel item { get; set; } = new();
}
