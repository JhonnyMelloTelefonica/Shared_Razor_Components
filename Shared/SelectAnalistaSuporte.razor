@using System.Globalization
@using Shared_Class_Vivo_Apps.Services
@using Newtonsoft.Json
@using System.ComponentModel
@using BlazorBootstrap
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Web;
@using Blazorise
@using Radzen.Blazor
@using Radzen
@using Microsoft.FluentUI.AspNetCore.Components
@using Shared_Static_Class.Model_DTO
@using Shared_Static_Class.Converters
@using Shared_Static_Class.Models

@if (!IsBusy)
{
    <div class="apply-component">
        <div class="input-area">
            <label for="@this.GetHashCode()">Selecione algum dos analistas disponíveis</label>
            <ul class="@(IsOpened ? "li-opened":"li-closed") form-control" id="@this.GetHashCode()" @onclick="@(() => IsOpened = !IsOpened)">
                @if (IsOpened)
                {
                    foreach (var item in Analistas)
                    {
                        <li class="@(item.Item2 ? "selected" : "not-selected")">
                            @if (item.Item2 == true)
                            {
                                <div style="width: 15px; height: 15px; position: absolute; top: -2px; right: -2px; background: #cc0000; display: flex; align-content: center; vertical-align: middle; border: solid white 1px; border-radius: 50%;"
                                     @onclick="@(() => item.Item2 = false)">
                                    <FluentIcon Value="@(new Icons.Filled.Size12.Dismiss().WithColor("#ffffff"))" Style="margin:auto;" />
                                </div>
                            }
                            <div class="text-sm-center justify-content-center flex-column d-flex">
                                <Image Style="width:30px; margin: auto" Border="Blazorise.Border.RoundedCircle" @onclick="@(() => ActionSelectAnalista(item))"
                                       Source="@(item.Item1.UserAvatar != null ? "data:image/png;base64," + SharedConverter.ConvertFileToString(item.Item1.UserAvatar) : "images/usericon.png" )">
                                </Image>
                                <span style="font-family: Vivo-font-light">
                                    @item.Item1.NOME
                                </span>
                            </div>
                        </li>
                        <FluentDivider Orientation="Microsoft.FluentUI.AspNetCore.Components.Orientation.Horizontal" Role="DividerRole.Separator" Class="w-100" />
                    }
                }
                else
                {
                    @if (IsSelected)
                    {
                        var analista = Analistas.First(x => x.Item2 == true);
                        <li>
                            <div style="width: 15px; height: 15px; position: absolute; top: -2px; right: -2px; background: #cc0000; display: flex; align-content: center; vertical-align: middle; border: solid white 1px; border-radius: 50%;"
                                 @onclick="@(() => analista.Item2 = false)">
                                <FluentIcon Value="@(new Icons.Filled.Size12.Dismiss().WithColor("#ffffff"))" Style="margin:auto;" />
                            </div>
                            <div class="text-sm-center justify-content-center flex-column d-flex">
                                <Image Style="width:30px; margin: auto" Border="Blazorise.Border.RoundedCircle"
                                       Source="@(analista.Item1.UserAvatar != null ? "data:image/png;base64," + SharedConverter.ConvertFileToString(analista.Item1.UserAvatar) : "images/usericon.png" )">
                                </Image>
                                <span style="font-family: Vivo-font-light">
                                    @analista.Item1.NOME
                                </span>
                            </div>

                        </li>
                    }
                    else
                    {
                        <li>
                            <div class="w-100" style="display:inline-flex;justify-content:space-between;justify-content:space-between;flex-direction:row;text-align:center;">
                                <FluentSkeleton Shape="SkeletonShape.Circle" Width="30px" Height="30px" Shimmer="false"></FluentSkeleton>
                                <FluentSkeleton Height="20px" Style="width:90%;max-width:500vw;align-self: center;" Shimmer="false"></FluentSkeleton>
                                <FluentIcon Value="@(new Icons.Filled.Size12.TriangleDown().WithColor("#617ad9"))" />
                            </div>
                        </li>
                    }
                }
            </ul>
            <div class="bar"></div>
        </div>
        <br />
        <FluentButton OnClick="SelectAnalista" Disabled="@(!IsSelected)">
            Selecionar
        </FluentButton>
    </div>
}
else
{
    <span class="spinner-border spinner-border-sm"></span>
}
