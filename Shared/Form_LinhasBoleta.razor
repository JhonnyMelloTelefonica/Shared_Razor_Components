@using Shared_Static_Class.Model_DTO
@using Shared_Static_Class.Converters

<li class="list-group-item">
    <Blazorise.Check @bind-Checked="item.HasLinha">Linha</Blazorise.Check>
    <br />
    @if (item.HasLinha.Value)
    {
        <Radzen.Blazor.RadzenFieldset Collapsed="false" AllowCollapse="true" Style="overflow-x: auto !important; max-height: 450px;">
            <HeaderTemplate>
                <span style="margin:auto">
                    <RadzenIcon Icon="sticky_note_2" class="me-1" />
                    <label><b>Dados da linha</b></label>
                </span>
            </HeaderTemplate>
            <ChildContent>
                @if (item.Plataforma == Plataforma.TERMINAIS)
                {
                    <div class="form-group">
                        <label><b>Número da linha</b></label>
                        <Blazorise.Validation>
                            <Blazorise.NumericPicker TValue="int" @bind-Value="item.Linha.Numero_Linha">
                                <Feedback>
                                    <Blazorise.ValidationError />
                                </Feedback>
                            </Blazorise.NumericPicker>
                        </Blazorise.Validation>
                    </div>
                }
                else if (item.Plataforma == Plataforma.FIXA || item.Movimento == Movimento.MIGRACAO)
                {
                    <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is3" Width="Width.Is100">
                        <div class="form-group">
                            <label><b>Número da linha</b></label>
                            <Blazorise.Validation>
                                <Blazorise.NumericPicker TValue="int" @bind-Value="item.Linha.Numero_Linha">
                                    <Feedback>
                                        <Blazorise.ValidationError />
                                    </Feedback>
                                </Blazorise.NumericPicker>
                            </Blazorise.Validation>
                        </div>
                        <div class="form-group">
                            <Validation>
                                <label><b>Valor</b></label>
                                <Blazorise.NumericPicker TValue="decimal" CurrencySymbol="R$" @bind-Value="item.Linha.Valor">
                                </Blazorise.NumericPicker>
                            </Validation>
                        </div>
                    </Div>
                }
                else
                {
                    <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is3" Width="Width.Is100">
                        <div class="form-group">
                            <label><b>Número da linha</b></label>
                            <Blazorise.Validation>
                                <Blazorise.NumericPicker TValue="int" @bind-Value="item.Linha.Numero_Linha">
                                    <Feedback>
                                        <Blazorise.ValidationError />
                                    </Feedback>
                                </Blazorise.NumericPicker>
                            </Blazorise.Validation>
                        </div>
                        @if (item.Portabilidade.HasValue)
                        {
                            @if (item.Portabilidade.Value)
                            {
                                <div class="form-group">
                                    <label><b>Número Provisório</b></label>
                                    <Blazorise.Validation>
                                        <Blazorise.NumericPicker TValue="int?" @bind-Value="item.Linha.Numero_Provisorio">
                                            <Feedback>
                                                <Blazorise.ValidationError />
                                            </Feedback>
                                        </Blazorise.NumericPicker>
                                    </Blazorise.Validation>
                                </div>
                                <div class="form-group">
                                    <label><b>Operadora Doadora</b></label>
                                    <Blazorise.Validation>
                                        <Blazorise.Select @bind-SelectedValue="item.Linha.Opera_doa" Width="Blazorise.Width.Is100">
                                            <ChildContent>
                                                <Blazorise.SelectItem Value="@(string.Empty)">Selecione</Blazorise.SelectItem>
                                                <Blazorise.SelectItem Value="@("OI")">OI</Blazorise.SelectItem>
                                                <Blazorise.SelectItem Value="@("TIM")">TIM</Blazorise.SelectItem>
                                                <Blazorise.SelectItem Value="@("CLARO")">CLARO</Blazorise.SelectItem>
                                            </ChildContent>
                                            <Feedback>
                                                <Blazorise.ValidationError />
                                            </Feedback>
                                        </Blazorise.Select>
                                    </Blazorise.Validation>
                                </div>
                            }
                        }
                        <div class="form-group">
                            <label><b>Material</b></label>
                            <Blazorise.Validation>
                                <Blazorise.TextEdit @bind-Text="item.Linha.Material" Disabled>
                                    <Feedback>
                                        <Blazorise.ValidationError />
                                    </Feedback>
                                </Blazorise.TextEdit>
                            </Blazorise.Validation>
                        </div>
                    </Div>
                    <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is2" Width="Width.Is100">
                        <div class="form-group">
                            <label><b>ICCID</b></label>
                            <Blazorise.Validation>
                                <Blazorise.TextEdit @bind-Text="@item.Linha.ICCID" Class="form-control" Disabled>
                                    <Feedback>
                                        <Blazorise.ValidationError />
                                    </Feedback>
                                </Blazorise.TextEdit>
                            </Blazorise.Validation>
                        </div>
                        <div class="form-group">
                            <label><b>Faturamento</b></label>
                            <Blazorise.Validation>
                                <Blazorise.TextEdit @bind-Text="@item.Linha.Faturamento" Class="form-control" Disabled>
                                    <Feedback>
                                        <Blazorise.ValidationError />
                                    </Feedback>
                                </Blazorise.TextEdit>
                            </Blazorise.Validation>
                        </div>
                    </Div>
                    @if (Movimento.RESGATE != item.Movimento)
                    {
                        <Div Flex="Flex.InlineFlex.JustifyContent.Between" Gap="Gap.Is2" Width="Width.Is100">
                            <div class="form-group">
                                <label><b>Vencimento de Fatura</b></label>
                                <Blazorise.Validation>
                                    <Blazorise.DatePicker @bind-Date="item.Linha.Data_Venc_Fat" InputMode="Blazorise.DateInputMode.Date"
                                                          Class="form-control" Disabled>
                                        <Feedback>
                                            <Blazorise.ValidationError />
                                        </Feedback>
                                    </Blazorise.DatePicker>
                                </Blazorise.Validation>
                            </div>
                            <div class="form-group">
                                <label><b>Valor</b></label>
                                <Blazorise.Validation>
                                    <Blazorise.NumericPicker TValue="decimal" CurrencySymbol="R$" @bind-Value="item.Linha.Valor" Disabled>
                                        <Feedback>
                                            <Blazorise.ValidationError />
                                        </Feedback>
                                    </Blazorise.NumericPicker>
                                </Blazorise.Validation>
                            </div>
                        </Div>
                    }
                    <Div Flex="Flex.InlineFlex.JustifyContent.Center" VerticalAlignment="VerticalAlignment.Middle" Gap="Gap.Is2" Width="Width.Is100">
                        <div class="form-group">
                            <label><b>Nota Fiscal</b></label>
                            <Blazorise.Validation>
                                <Blazorise.TextEdit @bind-Text="@item.Linha.NF" Class="form-control" Disabled>
                                    <Feedback>
                                        <Blazorise.ValidationError />
                                    </Feedback>
                                </Blazorise.TextEdit>
                            </Blazorise.Validation>
                        </div>
                    </Div>
                }
            </ChildContent>
        </Radzen.Blazor.RadzenFieldset>
    }
</li>

@code {
    [Parameter]
    public required BoletaDadosModel item { get; set; } = new();
}
