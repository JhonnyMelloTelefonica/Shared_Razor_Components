@using JustifyContent = Microsoft.FluentUI.AspNetCore.Components.JustifyContent;
@using System.IO.Compression;
@using Radzen.Blazor;
@using Microsoft.FluentUI.AspNetCore.Components;
@using Microsoft.JSInterop;
@using Shared_Static_Class.Models
@using Microsoft.AspNetCore.Components.Web

@if (AllowMulitple)
{
    <div class="w-100 m-auto justify-content-center align-items-center d-flex">
        <RadzenStack AlignItems="Radzen.AlignItems.Center" Orientation="Radzen.Orientation.Horizontal">
            <input name="file" id="Xinputfile00" type="file" accept="@Filter" @onchange="UploadFile" multiple hidden />
            <label class="form__input" for="file">
                @if (!Files.Any())
                {
                    <span>
                        Por favor muita atenção no envio de arquivos, <strong style="color: red; font-weight: bolder; font-family: Vivo-font-bold;">envie apenas arquivos que ajudem no tratamento da fila, por favor preste atenção!</strong>.
                    </span>
                    <br />
                    <br />
                    <br />
                    if (!Busy)
                    {

                        <span id="test2" style="appearance: auto; writing-mode: horizontal-tb !important; font-family:Vivo-font;
                                text-rendering: auto; color: white; background-color: #a9a9a9; letter-spacing: normal; word-spacing: normal; line-height: normal;
                                text-transform: none; text-indent: 0px; text-shadow: none; display: inline-block; text-align: center; align-items: flex-start; cursor: default;
                                box-sizing: border-box; margin: 0em; padding: 1px 6px; border-style: outset; border-color: transparent; border-image: initial; padding: 15px;"
                              @onclick="ClickUpload">Insira aqui o seu arquivo. </span>
                    }
                    else
                    {
                        <span class="spinner-border spinner-border-sm" />
                    }
                }
                else
                {
                    <RadzenStack Gap="4px" Orientation="Radzen.Orientation.Horizontal" Wrap="Radzen.FlexWrap.Wrap" Style="max-height: 100%; overflow-y: auto;">
                        @foreach (var item in Files)
                        {
                            <FluentButton @onclick="() => RemoveItem(item)" BackgroundColor="#188d21" IconEnd="@(new Icons.Regular.Size24.DismissCircle().WithColor("#FFFFFF"))">
                                <p style="width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; margin:0;padding:0;color:white;">
                                    @item.FileName
                                </p>
                            </FluentButton>
                        }
                    </RadzenStack>
                }
                <br />
            </label>
        </RadzenStack>
    </div>
}
else
{
    <input id="Xinputfile00" type="file" accept="@Filter" @onchange="UploadFile" hidden />
    @if (!Busy)
    {
        @if (!Files.Any())
        {
            <FluentButton Appearance="Appearance.Accent" BackgroundColor="@BackgroundColor" Color="@Color" Class="m-2" @onclick="ClickUpload">
                <p class="m-2">
                    @if (Icon is not null)
                    {
                        @Icon
                    }
                    @Title
                </p>
            </FluentButton>
        }
        else
        {
            var file = Files.First();
            <FluentButton Appearance="Appearance.Accent" BackgroundColor="@BackgroundColor" Color="@Color" Class="m-2" @onclick="ClickUpload">
                <p class="m-2">
                    Arquivo: @file.FileName
                </p>
            </FluentButton>
        }
    }
    else
    {
        <FluentButton Appearance="Appearance.Accent" BackgroundColor="@BackgroundColor" Color="@Color" Class="m-2">
            <p class="m-2">
                <span class="spinner-border spinner-border-sm" />
                @Title
            </p>
        </FluentButton>

    }
}

<br />

<style>
    .form__input {
        color: #333;
        text-align: center;
        font-size: 1.2rem;
        padding: 1.5rem 2rem;
        border-radius: 10px;
        background-color: white;
        border: dotted;
        border-color: #cfcaca;
        /*        box-shadow: 0 2px 2px 3px rgba(0, 0, 0, 0.1);*/
        align-self: center;
        /*display: block;*/
        /*border-bottom: transparent;*/
        transition: all 0.3s;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        margin: 0;
        width: 550px;
        height: 200px;
    }

        .form__input:placeholder-shown {
            box-shadow: 0 2px 2px 3px rgba(0, 0, 0, 0.1);
            width: 500px;
            height: 30px;
        }

        .form__input:valid {
            color: green;
        }

        .form__input:invalid {
            color: red;
        }
</style>